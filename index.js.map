{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/refs.js","../src/js/render-functions.js","../src/js/handlers.js","../src/main.js"],"sourcesContent":["\nimport axios from \"axios\";\nconst APIkey = \"52837219-31e3d366b905b38697491d842\";\naxios.defaults.baseURL = 'https://pixabay.com';\nexport function getImagesByQuery(query) {\n    return axios.get(\"/api/\",{params:{\n        key: APIkey,\n        q: query,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch:true,\n    }\n    })\n        .then(response => {\n     return response.data.hits\n        })\n        .catch(error => {\n    console.log(error.message);\n    \n    })\n}","export const refs = {\n  formEl: document.querySelector('.form'),\n  galleryEl: document.querySelector('.gallery'),\n  loaderEl: document.querySelector('.loader'),\n};","\nimport { refs } from \"./refs\";\nlet markup = \"\";\nexport function createGallery(images) {\n    for (const image of images) {\n        markup +=`<li class=\"gallery-item\">\n            <a class=\"gallery-link\" href=${image.largeImageURL}>\n                <img class=\"gallery-image\" src=${image.webformatURL} alt=${image.tags}>\n            </a>\n            <ul class=\"image-stats-list\">\n                <li class=\"image-stats-item\">\n                    <h3 class=\"image-stats-title\">Likes</h3>\n                    <p class=\"image-stats\">${image.likes}</p>\n                </li>\n                <li class=\"image-stats-item\">\n                    <h3 class=\"image-stats-title\">Views</h3>\n                    <p class=\"image-stats\">${image.views}</p>\n                </li>\n                <li class=\"image-stats-item\">\n                    <h3 class=\"image-stats-title\">Comments</h3>\n                    <p class=\"image-stats\">${image.comments}</p>\n                </li>\n                <li class=\"image-stats-item\">\n                    <h3 class=\"image-stats-title\">Downloads</h3>\n                    <p class=\"image-stats\">${image.downloads}</p>\n                </li>\n            </ul>\n        </li>`  \n    }\n    refs.galleryEl.insertAdjacentHTML(\"beforeend\",markup)\n    \n}\n// Ця функція повинна приймати масив images, створювати HTML-розмітку для галереї, додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh(). Нічого не повертає.\nexport function clearGallery() {\n markup = \"\" \n refs.galleryEl.innerHTML=\"\"   \n} \n// Ця функція нічого не приймає та повинна очищати вміст контейнера галереї.Нічого не повертає.\n\nexport function showLoader(){\n    if (refs.loaderEl.classList.contains(\"visually-hidden\")) {\n        refs.loaderEl.classList.remove(\"visually-hidden\")\n    }\n    \n}\n// } Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. Нічого не повертає.\n\nexport function hideLoader() {\nif (!refs.loaderEl.classList.contains(\"visually-hidden\")) {\n        refs.loaderEl.classList.add(\"visually-hidden\")\n    }\n}\n//  Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера.Нічого не повертає.","\nimport iziToast from \"izitoast\"\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { getImagesByQuery } from \"./pixabay-api\"\nimport { clearGallery, createGallery, hideLoader, showLoader } from \"./render-functions\";\nexport function handleSubmit(event) {\nevent.preventDefault() \n    const userInput = event.target.elements[0].value\n    if (userInput === \"\") {\n       iziToast.error({\n            message: 'Please write something',\n            position: 'topRight', \n    })\n    }\nclearGallery()\nshowLoader()\n    getImagesByQuery(userInput)\n        .then(hits => {\n     createGallery(hits)\n        })\n        .catch(error => {\n    console.log(error);\n    \n    })\n        .finally(() => {\nhideLoader()          \n})\n}","\nimport { handleSubmit } from \"./js/handlers\";\nimport { refs } from \"./js/refs\";\nimport { hideLoader } from \"./js/render-functions\";\nhideLoader()\nrefs.formEl.addEventListener(\"submit\", handleSubmit);\n"],"names":["APIkey","axios","getImagesByQuery","query","response","error","refs","markup","createGallery","images","image","clearGallery","showLoader","hideLoader","handleSubmit","event","userInput","iziToast","hits"],"mappings":"6vBAEA,MAAMA,EAAS,qCACfC,EAAM,SAAS,QAAU,sBAClB,SAASC,EAAiBC,EAAO,CACpC,OAAOF,EAAM,IAAI,QAAQ,CAAC,OAAO,CAC7B,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAW,EACd,CACL,CAAK,EACI,KAAKC,GACFA,EAAS,KAAK,IACjB,EACA,MAAMC,GAAS,CACpB,QAAQ,IAAIA,EAAM,OAAO,CAE7B,CAAK,CACL,CCpBO,MAAMC,EAAO,CAClB,OAAQ,SAAS,cAAc,OAAO,EACtC,UAAW,SAAS,cAAc,UAAU,EAC5C,SAAU,SAAS,cAAc,SAAS,CAC5C,ECFA,IAAIC,EAAS,GACN,SAASC,EAAcC,EAAQ,CAClC,UAAWC,KAASD,EAChBF,GAAS;AAAA,2CAC0BG,EAAM,aAAa;AAAA,iDACbA,EAAM,YAAY,QAAQA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKxCA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,6CAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,6CAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,6CAIdA,EAAM,SAAS;AAAA;AAAA;AAAA,eAKxDJ,EAAK,UAAU,mBAAmB,YAAYC,CAAM,CAExD,CAEO,SAASI,GAAe,CAC9BJ,EAAS,GACTD,EAAK,UAAU,UAAU,EAC1B,CAGO,SAASM,GAAY,CACpBN,EAAK,SAAS,UAAU,SAAS,iBAAiB,GAClDA,EAAK,SAAS,UAAU,OAAO,iBAAiB,CAGxD,CAGO,SAASO,GAAa,CACxBP,EAAK,SAAS,UAAU,SAAS,iBAAiB,GAC/CA,EAAK,SAAS,UAAU,IAAI,iBAAiB,CAErD,CC9CO,SAASQ,EAAaC,EAAO,CACpCA,EAAM,eAAgB,EAClB,MAAMC,EAAYD,EAAM,OAAO,SAAS,CAAC,EAAE,MACvCC,IAAc,IACfC,EAAS,MAAM,CACV,QAAS,yBACT,SAAU,UACtB,CAAK,EAELN,EAAc,EACdC,EAAY,EACRV,EAAiBc,CAAS,EACrB,KAAKE,GAAQ,CACjBV,EAAcU,CAAI,CACvB,CAAS,EACA,MAAMb,GAAS,CACpB,QAAQ,IAAIA,CAAK,CAErB,CAAK,EACI,QAAQ,IAAM,CACvBQ,EAAY,CACZ,CAAC,CACD,CCvBAA,EAAY,EACZP,EAAK,OAAO,iBAAiB,SAAUQ,CAAY"}